/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package JFastfiz;

public class LogWriter {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected LogWriter(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(LogWriter obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(LogWriter obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        fastfizJNI.delete_LogWriter(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public LogWriter(SWIGTYPE_p_std__ostream os, GameType gameType, Noise noise, String agentName, String opponentName) {
    this(fastfizJNI.new_LogWriter__SWIG_0(SWIGTYPE_p_std__ostream.getCPtr(os), gameType.swigValue(), Noise.getCPtr(noise), noise, agentName, opponentName), true);
  }

  public LogWriter(SWIGTYPE_p_std__ostream os, GameType gameType, Noise noise, String agentName) {
    this(fastfizJNI.new_LogWriter__SWIG_1(SWIGTYPE_p_std__ostream.getCPtr(os), gameType.swigValue(), Noise.getCPtr(noise), noise, agentName), true);
  }

  public LogWriter(SWIGTYPE_p_std__ostream os, GameType gameType, Noise noise) {
    this(fastfizJNI.new_LogWriter__SWIG_2(SWIGTYPE_p_std__ostream.getCPtr(os), gameType.swigValue(), Noise.getCPtr(noise), noise), true);
  }

  public LogWriter(SWIGTYPE_p_std__ostream os, GameType gameType) {
    this(fastfizJNI.new_LogWriter__SWIG_3(SWIGTYPE_p_std__ostream.getCPtr(os), gameType.swigValue()), true);
  }

  public LogWriter(SWIGTYPE_p_std__ostream os) {
    this(fastfizJNI.new_LogWriter__SWIG_4(SWIGTYPE_p_std__ostream.getCPtr(os)), true);
  }

  public LogWriter(String filename, GameType gameType, Noise noise, String agentName, String opponentName) {
    this(fastfizJNI.new_LogWriter__SWIG_5(filename, gameType.swigValue(), Noise.getCPtr(noise), noise, agentName, opponentName), true);
  }

  public LogWriter(String filename, GameType gameType, Noise noise, String agentName) {
    this(fastfizJNI.new_LogWriter__SWIG_6(filename, gameType.swigValue(), Noise.getCPtr(noise), noise, agentName), true);
  }

  public LogWriter(String filename, GameType gameType, Noise noise) {
    this(fastfizJNI.new_LogWriter__SWIG_7(filename, gameType.swigValue(), Noise.getCPtr(noise), noise), true);
  }

  public LogWriter(String filename, GameType gameType) {
    this(fastfizJNI.new_LogWriter__SWIG_8(filename, gameType.swigValue()), true);
  }

  public LogWriter(String filename) {
    this(fastfizJNI.new_LogWriter__SWIG_9(filename), true);
  }

  public void setNoise(Noise noise) {
    fastfizJNI.LogWriter_setNoise(swigCPtr, this, Noise.getCPtr(noise), noise);
  }

  public void setAgents(String agentName, String opponentName) {
    fastfizJNI.LogWriter_setAgents__SWIG_0(swigCPtr, this, agentName, opponentName);
  }

  public void setAgents(String agentName) {
    fastfizJNI.LogWriter_setAgents__SWIG_1(swigCPtr, this, agentName);
  }

  public void swapAgents() {
    fastfizJNI.LogWriter_swapAgents(swigCPtr, this);
  }

  public void write(GameState gs) {
    fastfizJNI.LogWriter_write__SWIG_0(swigCPtr, this, GameState.getCPtr(gs), gs);
  }

  public void write(GameShot gs, double duration) {
    fastfizJNI.LogWriter_write__SWIG_1(swigCPtr, this, GameShot.getCPtr(gs), gs, duration);
  }

  public void write(GameShot gs) {
    fastfizJNI.LogWriter_write__SWIG_2(swigCPtr, this, GameShot.getCPtr(gs), gs);
  }

  public void write(GameShot gs, ShotParams noiselessParams, double duration) {
    fastfizJNI.LogWriter_write__SWIG_3(swigCPtr, this, GameShot.getCPtr(gs), gs, ShotParams.getCPtr(noiselessParams), noiselessParams, duration);
  }

  public void write(GameShot gs, ShotParams noiselessParams) {
    fastfizJNI.LogWriter_write__SWIG_4(swigCPtr, this, GameShot.getCPtr(gs), gs, ShotParams.getCPtr(noiselessParams), noiselessParams);
  }

  public void write(TableState ts) {
    fastfizJNI.LogWriter_write__SWIG_5(swigCPtr, this, TableState.getCPtr(ts), ts);
  }

  public void write(ShotParams sp) {
    fastfizJNI.LogWriter_write__SWIG_6(swigCPtr, this, ShotParams.getCPtr(sp), sp);
  }

  public void comment(String text) {
    fastfizJNI.LogWriter_comment(swigCPtr, this, text);
  }

  public ShotResult LogAndExecute(GameState gst, GameShot gsh, ShotParams noiselessParams) {
    return ShotResult.swigToEnum(fastfizJNI.LogWriter_LogAndExecute__SWIG_0(swigCPtr, this, GameState.getCPtr(gst), gst, GameShot.getCPtr(gsh), gsh, ShotParams.getCPtr(noiselessParams), noiselessParams));
  }

  public ShotResult LogAndExecute(GameState gst, GameShot gsh) {
    return ShotResult.swigToEnum(fastfizJNI.LogWriter_LogAndExecute__SWIG_1(swigCPtr, this, GameState.getCPtr(gst), gst, GameShot.getCPtr(gsh), gsh));
  }

}
